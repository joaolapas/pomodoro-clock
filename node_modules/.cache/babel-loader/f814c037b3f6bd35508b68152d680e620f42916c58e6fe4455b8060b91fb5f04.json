{"ast":null,"code":"var _jsxFileName = \"/Users/joaolapas/Desktop/pomodoro-clock/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './App.css';\nimport Countdown from 'react-countdown';\nimport NotificationSound from './alert.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sessionTimer, setSessionTimer] = useState(25);\n  const [breakTimer, setBreakTimer] = useState(5);\n  const [sessionOrBreak, setSessionOrBreak] = useState(true);\n  //const [running, setRunning] = useState(false)\n  const clockRef = useRef();\n  const render = _ref => {\n    let {\n      formatted: {\n        minutes,\n        seconds\n      }\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"time-left\",\n      children: [minutes, \":\", seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 61\n    }, this);\n  };\n  const audioPlayer = useRef(null);\n  let paused = false;\n  const play = () => audioPlayer.current.play();\n  const reset = () => {\n    setSessionTimer(25);\n    setBreakTimer(5);\n    setSessionOrBreak(true);\n    paused = false;\n  };\n  const res = () => 'vai';\n  let sessionTime = /*#__PURE__*/_jsxDEV(Countdown, {\n    date: Date.now() + (sessionOrBreak ? sessionTimer * 60000 : breakTimer * 60000),\n    autoStart: paused ? true : false,\n    renderer: render,\n    ref: clockRef,\n    onComplete: () => {\n      setTimeout(() => {\n        setSessionOrBreak(x => !x);\n        clockRef.current.start();\n        play();\n      }, 1000);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"counters\",\n      children: [/*#__PURE__*/_jsxDEV(Counter, {\n        labelId: \"break-label\",\n        label: \"Break Length\",\n        time: breakTimer,\n        incrementId: \"break-increment\",\n        decrementId: \"break-decrement\",\n        lengthId: \"break-length\",\n        timer: setBreakTimer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Counter, {\n        labelId: \"session-label\",\n        label: \"Session Length\",\n        time: sessionTimer,\n        incrementId: \"session-increment\",\n        decrementId: \"session-decrement\",\n        lengthId: \"session-length\",\n        timer: setSessionTimer,\n        reset: reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"session-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"timer-label\",\n        children: sessionOrBreak ? 'Session' : 'Break'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"time-left\",\n        children: sessionTimer === 60 ? '60:00' : sessionTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"start_stop\",\n      onClick: () => {\n        if (!paused) {\n          clockRef.current.start();\n          paused = true;\n        } else {\n          clockRef.current.pause();\n          paused = false;\n        }\n      },\n      children: \"Start/Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"reset\",\n      onClick: () => {\n        reset();\n      },\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioPlayer,\n      src: NotificationSound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/bSDOZfOhr9edXCWQz5O1fT3VSQ=\");\n_c = App;\nconst Counter = props => {\n  _s2();\n  const [count, setCount] = useState(props.time);\n  useEffect(() => {\n    setCount(props.time);\n  }, [props.time]);\n  const handleCount = op => {\n    if (count >= 0 && count <= 60) {\n      setCount(prev => op === 'up' ? prev + 1 : prev - 1);\n      props.timer(count);\n    }\n  };\n  useEffect(() => {\n    resetCount();\n  }, [props.reset]);\n  const resetCount = () => {\n    setCount(props.time);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"break\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: props.labelId,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: props.lengthId,\n      className: \"count\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: props.incrementId,\n        className: \"up-down\",\n        onClick: () => {\n          if (count < 60) {\n            handleCount('up');\n            props.timer(prev => prev + 1);\n          }\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: props.decrementId,\n        className: \"up-down\",\n        onClick: () => {\n          if (count > 1) {\n            handleCount('down');\n            props.timer(prev => prev - 1);\n          }\n        },\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s2(Counter, \"k2nFJkR1mgqhCJsFcZK3J9a1ne4=\");\n_c2 = Counter;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Counter\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Countdown","NotificationSound","App","sessionTimer","setSessionTimer","breakTimer","setBreakTimer","sessionOrBreak","setSessionOrBreak","clockRef","render","formatted","minutes","seconds","audioPlayer","paused","play","current","reset","res","sessionTime","Date","now","setTimeout","x","start","pause","Counter","props","count","setCount","time","handleCount","op","prev","timer","resetCount","labelId","label","lengthId","incrementId","decrementId"],"sources":["/Users/joaolapas/Desktop/pomodoro-clock/src/App.js"],"sourcesContent":["\nimport React, { useRef, useEffect, useState } from 'react';\nimport './App.css';\nimport Countdown from 'react-countdown'\nimport NotificationSound from './alert.mp3'\n\n\n\n\nfunction App() {\n\n  \n  const [sessionTimer,setSessionTimer] = useState(25)\n  const [breakTimer,setBreakTimer] = useState(5)  \n  const [sessionOrBreak, setSessionOrBreak] = useState(true)\n  //const [running, setRunning] = useState(false)\n  const clockRef = useRef();\n  const render = ({ formatted: { minutes, seconds }, }) => (<span id='time-left'>{minutes}:{seconds}</span>)\n  const audioPlayer = useRef(null);\n  let paused = false\n\n  const play = () =>audioPlayer.current.play()\n\n  const reset =()=>{\n\n    setSessionTimer(25)\n    setBreakTimer(5)\n    setSessionOrBreak(true)\n    paused = false;\n  }\n  const res = ()=> 'vai'\n\n  \n \n  let sessionTime= <Countdown \n                  date={Date.now() + (sessionOrBreak?sessionTimer*60000:breakTimer*60000)} \n                  autoStart={paused?true:false}\n                  renderer={render}\n                  ref={clockRef}\n                  onComplete={\n                      \n                    ()=>{\n                      setTimeout(()=>{\n                        setSessionOrBreak((x)=>!x)\n                        clockRef.current.start()\n                        play()},1000\n                      )\n                    }\n                  \n                }\n                  \n                  />\n  \n                  \n  \n  \n  \n \n  \n  return (\n    <div className=\"App\">\n      <div id='counters'>\n        <Counter \n          labelId='break-label' \n          label='Break Length' \n          time={breakTimer}\n          incrementId='break-increment'\n          decrementId='break-decrement'\n          lengthId='break-length'\n          timer={setBreakTimer}\n          \n\n        />\n        <Counter \n          labelId='session-label' \n          label='Session Length' \n          time={sessionTimer}\n          incrementId='session-increment'\n          decrementId='session-decrement'\n          lengthId='session-length'\n          timer={setSessionTimer}\n          reset={reset}\n        />  \n      </div>\n      <div id=\"session-container\">\n        <h2 id='timer-label'>{sessionOrBreak?'Session':'Break'}</h2>\n        <div id='time-left'>{sessionTimer===60?'60:00':sessionTime}</div>\n      </div>\n\n      \n      <button id='start_stop' onClick={()=>{\n                                        if(!paused){\n                                          clockRef.current.start()\n                                          paused = true \n                                        }else{\n                                          clockRef.current.pause()\n                                          paused = false\n                                        }\n      }\n                                        \n\n                                      }>Start/Stop</button>\n\n      <button id='reset' onClick={()=>{\n        reset()\n      }\n        \n      }>Reset</button>\n\n      <audio ref={audioPlayer} src={NotificationSound} />\n    </div>\n  );\n}\n\nconst Counter = (props) => {\n\n  const[count, setCount] = useState(props.time)\n  \n  \n useEffect(()=>{\n  setCount(props.time)\n },[props.time])\n\n \n  \n  \n  const handleCount = (op) =>{\n      if(count>=0 && count <= 60){\n          setCount((prev)=>op==='up'?prev+1:prev-1) \n          props.timer(count)\n      }\n      \n      \n  }\n\n  useEffect(()=>{\n    resetCount()\n  },[props.reset])\n  const resetCount = () => {\n      setCount(props.time)\n  }\n  \n  \n  return(\n    <div id='break' >\n        <h2 id={props.labelId}>{props.label}</h2>\n        <div id={props.lengthId} className='count' >{count}</div>\n        <div id='container'>\n          <button id={props.incrementId} className='up-down' onClick={\n              ()=>{\n                  if(count<60){\n                    handleCount('up')\n                    props.timer((prev)=>prev+1)\n                  }\n              }\n          }>+</button>\n          <button id={props.decrementId} className='up-down' onClick={\n              ()=>{\n                  if(count>1){\n                      handleCount('down')\n                      props.timer((prev)=>prev-1)\n                  }\n                      \n                  \n              }\n          }>-</button>\n        </div>\n      </div>\n  )\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}