{"ast":null,"code":"var _jsxFileName = \"/Users/joaolapas/Desktop/pomodoro-clock/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './App.css';\nimport Counter from './Counter';\nimport Countdown from 'react-countdown';\nimport NotificationSound from './alert.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sessionTimer, setSessionTimer] = useState(25);\n  const [breakTimer, setBreakTimer] = useState(5);\n  const [sessionOrBreak, setSessionOrBreak] = useState(true);\n  const [running, setRunning] = useState(false);\n  const clockRef = useRef();\n  const render = _ref => {\n    let {\n      formatted: {\n        hours,\n        minutes,\n        seconds\n      },\n      completed\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"time-left\",\n      children: [minutes, \":\", seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 78\n    }, this);\n  };\n  const audioPlayer = useRef(null);\n  const play = () => audioPlayer.current.play();\n  useEffect(() => {\n    if (running) {\n      clockRef.current.start();\n    } else {\n      clockRef.current.pause();\n    }\n  }, [running]);\n  let sessionTime = /*#__PURE__*/_jsxDEV(Countdown, {\n    date: Date.now() + (sessionOrBreak ? sessionTimer * 60000 : breakTimer * 60000),\n    autoStart: running ? true : false,\n    renderer: render,\n    ref: clockRef,\n    onComplete: () => {\n      setSessionOrBreak(x => !x);\n      clockRef.current.start();\n      play();\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"counters\",\n      children: [/*#__PURE__*/_jsxDEV(Counter, {\n        labelId: \"break-label\",\n        label: \"Break Length\",\n        time: 5,\n        incrementId: \"break-increment\",\n        decrementId: \"break-decrement\",\n        lengthId: \"break-length\",\n        timer: setBreakTimer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Counter, {\n        labelId: \"session-label\",\n        label: \"Session Length\",\n        time: 25,\n        incrementId: \"session-increment\",\n        decrementId: \"session-decrement\",\n        lengthId: \"session-length\",\n        timer: setSessionTimer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"session-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"timer-label\",\n        children: sessionOrBreak ? 'Session' : 'Break'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"time-left\",\n        children: sessionTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"start_stop\",\n      onClick: () => setRunning(prev => !prev),\n      children: \"Start/Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"reset\",\n      onClick: () => {\n        setSessionTimer(25);\n        setBreakTimer(5);\n        setRunning(false);\n        setSessionOrBreak(true);\n      },\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioPlayer,\n      src: NotificationSound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8T/f2RqZbVpRnXS1pGJM1PE8UAw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Counter","Countdown","NotificationSound","App","sessionTimer","setSessionTimer","breakTimer","setBreakTimer","sessionOrBreak","setSessionOrBreak","running","setRunning","clockRef","render","formatted","hours","minutes","seconds","completed","audioPlayer","play","current","start","pause","sessionTime","Date","now","x","prev"],"sources":["/Users/joaolapas/Desktop/pomodoro-clock/src/App.js"],"sourcesContent":["\nimport React, { useRef, useEffect, useState } from 'react';\nimport './App.css';\nimport Counter from './Counter';\nimport Countdown from 'react-countdown'\nimport NotificationSound from './alert.mp3'\n\n\n\nfunction App() {\n\n  \n  const [sessionTimer,setSessionTimer] = useState(25)\n  const [breakTimer,setBreakTimer] = useState(5)  \n  const [sessionOrBreak, setSessionOrBreak] = useState(true)\n  const [running, setRunning] = useState(false)\n  const clockRef = useRef();\n  const render = ({ formatted: { hours, minutes, seconds }, completed }) => (<span id='time-left'>{minutes}:{seconds}</span>)\n  const audioPlayer = useRef(null);\n\n  const play = () =>audioPlayer.current.play()\n  \n  useEffect(()=>{\n    if(running){\n      clockRef.current.start()\n    }else{\n      clockRef.current.pause()\n    }\n  },[running])\n\n  \n \n  let sessionTime= <Countdown \n                  date={Date.now() + (sessionOrBreak?sessionTimer*60000:breakTimer*60000)} \n                  autoStart={running?true:false}\n                  renderer={render}\n                  ref={clockRef}\n                  onComplete={\n                    \n                    ()=>{\n                      setSessionOrBreak((x)=>!x)\n                      clockRef.current.start()\n                      play()\n                    }\n                  }\n                  />\n  \n                  \n  \n  \n  \n \n  \n  return (\n    <div className=\"App\">\n      <div id='counters'>\n        <Counter \n          labelId='break-label' \n          label='Break Length' \n          time={5}\n          incrementId='break-increment'\n          decrementId='break-decrement'\n          lengthId='break-length'\n          timer={setBreakTimer}\n\n        />\n        <Counter \n          labelId='session-label' \n          label='Session Length' \n          time={25}\n          incrementId='session-increment'\n          decrementId='session-decrement'\n          lengthId='session-length'\n          timer={setSessionTimer}\n        />  \n      </div>\n      <div id=\"session-container\">\n        <h2 id='timer-label'>{sessionOrBreak?'Session':'Break'}</h2>\n        <div id='time-left'>{sessionTime}</div>\n      </div>\n\n      \n      <button id='start_stop' onClick={()=>setRunning((prev)=>!prev)}>Start/Stop</button>\n\n      <button id='reset' onClick={\n        ()=>{\n          setSessionTimer(25)\n          setBreakTimer(5)\n          setRunning(false)\n          setSessionOrBreak(true)\n        }\n      }>Reset</button>\n\n      <audio ref={audioPlayer} src={NotificationSound} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}